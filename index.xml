<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The New Best Practices</title>
    <link>https://thenewbestpractices.com/</link>
    <description>Recent content on The New Best Practices</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jan 2018 12:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://thenewbestpractices.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code Review</title>
      <link>https://thenewbestpractices.com/code-review/</link>
      <pubDate>Sat, 20 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/code-review/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>https://thenewbestpractices.com/comments/</link>
      <pubDate>Fri, 19 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/comments/</guid>
      <description>&amp;nbsp; Outline  Definition of comments: &amp;ldquo;Metadata in source code that describe what code fails to communicate. Some languages and frameworks opt to use the mechanism of comments as formal documentation for code, but these two concepts should be separated.&amp;ldquo; Strive to make code self-documenting Formal Documentation vs. Code Comments Using tests to document your code Considering strong types as a type of documentation Docstring Tests The value of documenting types Worthless comments should be avoided Don&amp;rsquo;t use comments to &amp;ldquo;vent&amp;rdquo; your emotions  Links  Python doctest JSON API Expectations Semantic expectation helpers for JSON API testing using RSpec and Airborne.</description>
    </item>
    
    <item>
      <title>YAGNI</title>
      <link>https://thenewbestpractices.com/yagni/</link>
      <pubDate>Thu, 18 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/yagni/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Points</title>
      <link>https://thenewbestpractices.com/points/</link>
      <pubDate>Wed, 17 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/points/</guid>
      <description>&amp;nbsp; Outline  Software development is not a &amp;ldquo;game&amp;rdquo;, i.e. you aren&amp;rsquo;t aiming to get more points Points give you a reference for how your people, process &amp;amp; technology are working together Velocity therefore is a function with these inputs Estimation is possible through a &amp;ldquo;Stable Velocity&amp;rdquo; Estimates aren&amp;rsquo;t meant to be used to hide behind Fixed estimates aren&amp;rsquo;t really possible as the number of variables in a project consistently change Developers need to deteremine their lifestyle.</description>
    </item>
    
    <item>
      <title>About The New Best Practices</title>
      <link>https://thenewbestpractices.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thenewbestpractices.com/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>