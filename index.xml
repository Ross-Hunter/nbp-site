<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The New Best Practices</title>
    <link>https://thenewbestpractices.com/</link>
    <description>Recent content on The New Best Practices</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Aug 2018 12:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://thenewbestpractices.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Requirements</title>
      <link>https://thenewbestpractices.com/episodes/requirements/</link>
      <pubDate>Thu, 30 Aug 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/requirements/</guid>
      <description> &amp;nbsp; Outline Links </description>
    </item>
    
    <item>
      <title>Delivery</title>
      <link>https://thenewbestpractices.com/episodes/delivery/</link>
      <pubDate>Sun, 20 May 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/delivery/</guid>
      <description> &amp;nbsp; Outline  Definition of delivery: &amp;ldquo;Putting software where someone can use it.&amp;ldquo; Branch from develop, or branch from master? Why not just commit to master? Don&amp;rsquo;t deploy a development environment. qa, test and uat are bad branch names. You should automate the deployment of PR branches. Understand a feature before start it. Software is bad. Developers should be manually testing during code review.  Links  Git Flow GitHub Flow Heroku Flow Heroku Review Apps  </description>
    </item>
    
    <item>
      <title>Learning New Things</title>
      <link>https://thenewbestpractices.com/episodes/learning-new-things/</link>
      <pubDate>Fri, 30 Mar 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/learning-new-things/</guid>
      <description> &amp;nbsp; Outline Links </description>
    </item>
    
    <item>
      <title>Monorepo</title>
      <link>https://thenewbestpractices.com/episodes/monorepo/</link>
      <pubDate>Thu, 01 Mar 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/monorepo/</guid>
      <description> &amp;nbsp; Outline Links  Google&amp;rsquo;s Monorepo Heroku Review Apps  </description>
    </item>
    
    <item>
      <title>Code Review</title>
      <link>https://thenewbestpractices.com/episodes/code-review/</link>
      <pubDate>Sat, 20 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/code-review/</guid>
      <description> &amp;nbsp; Outline Links </description>
    </item>
    
    <item>
      <title>Code Comments</title>
      <link>https://thenewbestpractices.com/episodes/code-comments/</link>
      <pubDate>Fri, 19 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/code-comments/</guid>
      <description>&amp;nbsp; Outline  Definition of comments: &amp;ldquo;Metadata in source code that describe what code fails to communicate. Some languages and frameworks opt to use the mechanism of comments as formal documentation for code, but these two concepts should be separated.&amp;ldquo; Strive to make code self-documenting Formal Documentation vs. Code Comments Using tests to document your code Considering strong types as a type of documentation Docstring Tests The value of documenting types Worthless comments should be avoided Don&amp;rsquo;t use comments to &amp;ldquo;vent&amp;rdquo; your emotions  Links  Python doctest JSON API Expectations Semantic expectation helpers for JSON API testing using RSpec and Airborne.</description>
    </item>
    
    <item>
      <title>YAGNI</title>
      <link>https://thenewbestpractices.com/episodes/yagni/</link>
      <pubDate>Thu, 18 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/yagni/</guid>
      <description> &amp;nbsp; Outline Links </description>
    </item>
    
    <item>
      <title>Points</title>
      <link>https://thenewbestpractices.com/episodes/points/</link>
      <pubDate>Wed, 17 Jan 2018 12:00:00 -0400</pubDate>
      
      <guid>https://thenewbestpractices.com/episodes/points/</guid>
      <description>&amp;nbsp; Outline  Software development is not a &amp;ldquo;game&amp;rdquo;, i.e. you aren&amp;rsquo;t aiming to get more points Points give you a reference for how your people, process &amp;amp; technology are working together Velocity therefore is a function with these inputs Estimation is possible through a &amp;ldquo;Stable Velocity&amp;rdquo; Estimates aren&amp;rsquo;t meant to be used to hide behind Fixed estimates aren&amp;rsquo;t really possible as the number of variables in a project consistently change Developers need to deteremine their lifestyle.</description>
    </item>
    
    <item>
      <title>About The New Best Practices</title>
      <link>https://thenewbestpractices.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thenewbestpractices.com/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>